// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Explains AI-generated security alerts and recommendations, indicating contributing factors and severity.
 *
 * - explainAlert - A function that handles the explanation of security alerts.
 * - ExplainAlertInput - The input type for the explainAlert function.
 * - ExplainAlertOutput - The return type for the explainAlert function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainAlertInputSchema = z.object({
  alertDescription: z
    .string()
    .describe('The description of the security alert or recommendation.'),
  confidenceLevel: z
    .number()
    .describe('The confidence level of the alert, from 0 to 1.'),
  severity: z.string().describe('The severity of the alert (e.g., low, medium, high, critical).'),
  contributingFactors: z
    .string()
    .describe('The factors that contributed to the alert, as a comma separated list.'),
});

export type ExplainAlertInput = z.infer<typeof ExplainAlertInputSchema>;

const ExplainAlertOutputSchema = z.object({
  explanation: z.string().describe('A clear, concise explanation of the alert.'),
  justification: z.string().describe('A more detailed justification of the alert, including the contributing factors and their impact.'),
  recommendedActions: z.string().describe('Recommended actions to mitigate the threat or address the issue.'),
});

export type ExplainAlertOutput = z.infer<typeof ExplainAlertOutputSchema>;

export async function explainAlert(input: ExplainAlertInput): Promise<ExplainAlertOutput> {
  return explainAlertFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainAlertPrompt',
  input: {schema: ExplainAlertInputSchema},
  output: {schema: ExplainAlertOutputSchema},
  prompt: `You are a security expert explaining a security alert or recommendation to a security professional.

  Provide a clear, concise explanation of the alert, a more detailed justification including contributing factors and their impact, and recommended actions to mitigate the threat.

  Alert Description: {{{alertDescription}}}
  Confidence Level: {{{confidenceLevel}}}
  Severity: {{{severity}}}
  Contributing Factors: {{{contributingFactors}}}
  \n
  Explanation:
  Justification:
  Recommended Actions:`,
});

const explainAlertFlow = ai.defineFlow(
  {
    name: 'explainAlertFlow',
    inputSchema: ExplainAlertInputSchema,
    outputSchema: ExplainAlertOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
